{"version":3,"sources":["components/Character.js","components/NextQuote.js","components/Quote.js","hooks/useFetchApi.js","BreakingBad.js","index.js"],"names":["Character","character","className","author","src","img","alt","NextQuote","setNext","onClick","Quote","quote","useFetchApi","url","next","useState","loading","error","charact","setCharact","useEffect","fetch","then","resp","json","data","resp2","characInfo","length","BreakingBad","ReactDOM","render","document","getElementById"],"mappings":"wLAEaA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,OACE,gCACE,oBAAIC,UAAU,YAAd,SAA2BD,EAAUE,SACrC,qBACED,UAAU,gBACVE,IAAKH,EAAUI,IACfC,IAAKL,EAAUE,aCPVI,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAI1B,OACE,qBAAKN,UAAU,mBAAf,SACE,yBAAQO,QALU,WACpBD,GAAQ,IAIN,UACE,qCACA,6CCRKE,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,8BACE,mBAAGT,UAAU,kBAAb,SAAgCS,OC0CvBC,EA7CK,SAACC,EAAKC,EAAMN,GAAa,IAAD,EACZO,mBAAS,CACrCZ,OAAQ,GACRE,IAAK,GACLM,MAAO,GACPK,SAAS,EACTC,OAAO,IANiC,mBACnCC,EADmC,KAC1BC,EAD0B,KA0C1C,OAlCAC,qBAAU,WACRD,EAAW,CACThB,OAAQ,GACRE,IAAK,GACLM,MAAO,GACPK,SAAS,EACTC,OAAO,IAETI,MAAMR,EAAI,IACPS,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLJ,MAAMR,EAAI,GAAKY,EAAK,GAAGtB,QACpBmB,MAAK,SAACI,GAAD,OAAWA,EAAMF,UACtBF,MAAK,SAACK,GACDA,EAAWC,OAAS,EACtBT,EAAW,CACThB,OAAQsB,EAAK,GAAGtB,OAChBE,IAAKsB,EAAW,GAAGtB,IACnBM,MAAOc,EAAK,GAAGd,MACfK,SAAS,EACTC,OAAO,IAGTE,EAAW,CACThB,OAAQsB,EAAK,GAAGtB,OAChBa,SAAS,EACTC,OAAO,IAGXT,GAAQ,WAGf,CAACM,IAEGI,GCtCIW,EAAc,WAAO,IAAD,EACPd,oBAAS,GADF,mBACxBD,EADwB,KAClBN,EADkB,KAMzBP,EAAYW,EAJN,CAAC,sDAAD,2DAIuBE,EAAMN,GAEzC,OACE,sBAAKN,UAAU,cAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,uBACCD,EAAUe,QACT,6CACEf,EAAUgB,MACZ,qCACE,6BAAKhB,EAAUE,SACf,8EAGF,qCACE,cAAC,EAAD,CAAWF,UAAWA,IACtB,cAAC,EAAD,CAAOU,MAAOV,EAAUU,WAG5B,cAAC,EAAD,CAAWH,QAASA,Q,MC1B1BsB,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.c34380bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Character = ({ character }) => {\r\n  return (\r\n    <div>\r\n      <h1 className='char-name'>{character.author}</h1>\r\n      <img\r\n        className='character-img'\r\n        src={character.img}\r\n        alt={character.author}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const NextQuote = ({ setNext }) => {\r\n  const handleOnClick = () => {\r\n    setNext(true);\r\n  };\r\n  return (\r\n    <div className='arrows-container'>\r\n      <button onClick={handleOnClick}>\r\n        <span>N</span>\r\n        <span>ext</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Quote = ({ quote }) => {\r\n  return (\r\n    <div>\r\n      <p className='character-quote'>{quote}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFetchApi = (url, next, setNext) => {\r\n  const [charact, setCharact] = useState({\r\n    author: '',\r\n    img: '',\r\n    quote: '',\r\n    loading: true,\r\n    error: false,\r\n  });\r\n  useEffect(() => {\r\n    setCharact({\r\n      author: '',\r\n      img: '',\r\n      quote: '',\r\n      loading: true,\r\n      error: false,\r\n    });\r\n    fetch(url[1])\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        fetch(url[0] + data[0].author)\r\n          .then((resp2) => resp2.json())\r\n          .then((characInfo) => {\r\n            if (characInfo.length > 0) {\r\n              setCharact({\r\n                author: data[0].author,\r\n                img: characInfo[0].img,\r\n                quote: data[0].quote,\r\n                loading: false,\r\n                error: false,\r\n              });\r\n            } else {\r\n              setCharact({\r\n                author: data[0].author,\r\n                loading: false,\r\n                error: true,\r\n              });\r\n            }\r\n            setNext(false);\r\n          });\r\n      });\r\n  }, [next]);\r\n\r\n  return charact;\r\n};\r\n\r\nexport default useFetchApi;\r\n","import React, { useState } from 'react';\r\nimport { Character } from './components/Character';\r\nimport { NextQuote } from './components/NextQuote';\r\nimport { Quote } from './components/Quote';\r\nimport useFetchApi from './hooks/useFetchApi';\r\n\r\nexport const BreakingBad = () => {\r\n  const [next, setNext] = useState(false);\r\n  const url = [\r\n    `https://www.breakingbadapi.com/api/characters?name=`,\r\n    `https://www.breakingbadapi.com/api/quote/random?author=`,\r\n  ]; //[0] pfoto personaje, [1] frase personaje\r\n  const character = useFetchApi(url, next, setNext);\r\n\r\n  return (\r\n    <div className='app-wrapper'>\r\n      <h1 className='title'>Breaking Bad</h1>\r\n      <hr />\r\n      {character.loading ? (\r\n        <h1> Loading...</h1>\r\n      ) : character.error ? (\r\n        <>\r\n          <h1>{character.author}</h1>\r\n          <h3> No hay informaci√≥n para ese personaje</h3>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Character character={character} />\r\n          <Quote quote={character.quote} />\r\n        </>\r\n      )}\r\n      <NextQuote setNext={setNext} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BreakingBad } from './BreakingBad';\nimport './styles.css';\n\nReactDOM.render(<BreakingBad />, document.getElementById('root'));\n"],"sourceRoot":""}